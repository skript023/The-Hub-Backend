name: Deploy to Production

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb && 
          sudo dpkg -i cloudflared.deb && 
          sudo cloudflared service install eyJhIjoiYzkyOTdhOThlNTlmMjJmYTRiZTRkZWI2ODRhMmQzNDgiLCJ0IjoiNzczZDRjMGMtZTQzZC00YTk5LWIyYjUtYWY2NjM1MDhkNGQ3IiwicyI6IlpHUTNabVE0TkRrdE1tWmhOeTAwTkdZNUxXRmxOVGt0WmprNVkyVXhaRFkwTXpndyJ9

      - name: Add cloudflare SSH config
        run: |
          if [ ! -d ~/.ssh ]; then mkdir ~/.ssh; fi
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Create directory
        env:
          SSH_CREDENTIAL: ${{ secrets.SSH_CREDENTIAL }}
        run: |
          sshpass -p "$SSH_CREDENTIAL" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          if [ ! -d '/media/telkom/data11/deployment/rena' ]; then 
            sudo mkdir -p /media/telkom/data11/deployment/rena 
          else 
            echo Directory '/media/telkom/data11/deployment/rena already exists.'
          fi"

      - name: Set safe directory
        env:
          SSH_CREDENTIAL: ${{ secrets.SSH_CREDENTIAL }}
        run: sshpass -p "$SSH_CREDENTIAL" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "git config --global --add safe.directory /media/telkom/data11/deployment/rena/rena-backend"
      
      - name: Deploy from repository
        env:
          SSH_CREDENTIAL: ${{ secrets.SSH_CREDENTIAL }}
        run: |
          sshpass -p "$SSH_CREDENTIAL" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          if [ ! -d '/media/telkom/data11/deployment/rena/rena-backend' ]; then 
            cd /var/www/rena.telkom.co.id && sudo git clone https://github.com/${{ github.repository }} backend; 
          else 
            cd /media/telkom/data11/deployment/rena/rena-backend && sudo git pull origin main; 
          fi"

      - name: Build and start Docker containers
        env:
          SSH_CREDENTIAL: ${{ secrets.SSH_CREDENTIAL }}
        run: sshpass -p "$SSH_CREDENTIAL" ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /media/telkom/data11/deployment/rena/rena-backend && sudo docker compose up --build -d"